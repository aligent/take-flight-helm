{{- if .Values.mainStore.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ if eq .Release.Namespace "takeflight-preview" }}takeflight-preview-irsa-role{{ else }}takeflight-irsa-role{{ end }}
      containers:
        - name: takeflight
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: "NEXTAUTH_SECRET"
            {{- if .Values.secrets.create }}
            valueFrom:
              secretKeyRef:
                name: {{ if eq .Release.Namespace "takeflight-preview" }}{{ .Release.Name }}-secrets{{ else }}{{ .Values.secrets.name | default "takeflight-secrets" }}{{ end }}
                key: NEXTAUTH_SECRET
            {{- else }}
            value: {{ .Values.env.NEXTAUTH_SECRET | quote }}
            {{- end }}
          - name: "AUTH_SECRET"
            {{- if .Values.secrets.create }}
            valueFrom:
              secretKeyRef:
                name: {{ if eq .Release.Namespace "takeflight-preview" }}{{ .Release.Name }}-secrets{{ else }}{{ .Values.secrets.name | default "takeflight-secrets" }}{{ end }}
                key: AUTH_SECRET
            {{- else }}
            value: {{ .Values.env.AUTH_SECRET | quote }}
            {{- end }}
          - name: "NEXTAUTH_URL"
            value: {{ .Values.env.NEXTAUTH_URL | quote }}
          - name: "NODE_ENV"
            value: {{ .Values.env.NODE_ENV | quote }}
          - name: "HOST"
            value: {{ .Values.env.HOST | quote }}
          - name: "DEBUG"
            value: {{ .Values.env.DEBUG | quote }}
          - name: "NEXT_DEBUG"
            value: {{ .Values.env.NEXT_DEBUG | quote }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - 'response=$(wget --spider -S http://127.0.0.1:{{ .Values.service.targetPort }}/ 2>&1); echo "$response" | grep -q "HTTP/1.1 [2-4]"'
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - 'response=$(wget --spider -S http://127.0.0.1:{{ .Values.service.targetPort }}/ 2>&1); echo "$response" | grep -q "HTTP/1.1 [2-4]"'
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 30
            timeoutSeconds: 5
          volumeMounts:
          - name: tmp-volume
            mountPath: /tmp
          - name: nextjs-cache
            mountPath: /.next
          - name: secrets-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ if eq .Release.Namespace "takeflight-preview" }}{{ .Release.Name }}-secrets{{ else }}{{ .Values.secretsStore.secretProviderClass | default "takeflight-secrets" }}{{ end }}
{{- end }}